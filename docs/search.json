[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab 10",
    "section": "",
    "text": "# spatial data science\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(units)\n\nudunits database from C:/Users/mcoop/AppData/Local/R/win-library/4.4/units/share/udunits/udunits2.xml\n\n# Data\nlibrary(AOI)\n\n# Visualization\nlibrary(gghighlight)\n\nWarning: package 'gghighlight' was built under R version 4.4.3\n\nlibrary(ggrepel)\n\nWarning: package 'ggrepel' was built under R version 4.4.3\n\nlibrary(knitr)"
  },
  {
    "objectID": "index.html#libraries",
    "href": "index.html#libraries",
    "title": "Lab 10",
    "section": "",
    "text": "# spatial data science\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(units)\n\nudunits database from C:/Users/mcoop/AppData/Local/R/win-library/4.4/units/share/udunits/udunits2.xml\n\n# Data\nlibrary(AOI)\n\n# Visualization\nlibrary(gghighlight)\n\nWarning: package 'gghighlight' was built under R version 4.4.3\n\nlibrary(ggrepel)\n\nWarning: package 'ggrepel' was built under R version 4.4.3\n\nlibrary(knitr)"
  },
  {
    "objectID": "index.html#define-a-projection",
    "href": "index.html#define-a-projection",
    "title": "Lab 10",
    "section": "1.1 Define a Projection",
    "text": "1.1 Define a Projection\n\neqdc &lt;- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'"
  },
  {
    "objectID": "index.html#get-usa-boundaries",
    "href": "index.html#get-usa-boundaries",
    "title": "Lab 10",
    "section": "1.2 Get USA Boundaries",
    "text": "1.2 Get USA Boundaries\n\nremotes::install_github(\"mikejohnson51/AOI\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'AOI' from a github remote, the SHA1 (f821d499) has not changed since last install.\n  Use `force = TRUE` to force installation\n\nconus_states &lt;- aoi_get(state = 'conus')\nconus_states_eqdc &lt;- st_transform(conus_states, crs = eqdc)"
  },
  {
    "objectID": "index.html#get-country-boundaries-for-mexico-the-united-states-of-america-and-canada",
    "href": "index.html#get-country-boundaries-for-mexico-the-united-states-of-america-and-canada",
    "title": "Lab 10",
    "section": "1.3 Get country boundaries for Mexico, the United States of America, and Canada",
    "text": "1.3 Get country boundaries for Mexico, the United States of America, and Canada\n\ncountries &lt;- aoi_get(country = c(\"USA\", \"MX\", \"CA\"))\n\n# Reproject to Equidistant Conic\ncountries_proj &lt;- st_transform(countries, crs = eqdc)"
  },
  {
    "objectID": "index.html#get-city-locations-from-the-csv-file",
    "href": "index.html#get-city-locations-from-the-csv-file",
    "title": "Lab 10",
    "section": "1.4 Get city locations from the CSV file",
    "text": "1.4 Get city locations from the CSV file\n\nreadr::read_csv(\"data/uscities.csv\")\n\nRows: 31254 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): city, city_ascii, state_id, state_name, county_fips, county_name, s...\ndbl (6): lat, lng, population, density, ranking, id\nlgl (2): military, incorporated\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 31,254 × 17\n   city      city_ascii state_id state_name county_fips county_name   lat    lng\n   &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;\n 1 New York  New York   NY       New York   36081       Queens       40.7  -73.9\n 2 Los Ange… Los Angel… CA       California 06037       Los Angeles  34.1 -118. \n 3 Chicago   Chicago    IL       Illinois   17031       Cook         41.8  -87.7\n 4 Miami     Miami      FL       Florida    12086       Miami-Dade   25.8  -80.2\n 5 Houston   Houston    TX       Texas      48201       Harris       29.8  -95.4\n 6 Dallas    Dallas     TX       Texas      48113       Dallas       32.8  -96.8\n 7 Philadel… Philadelp… PA       Pennsylva… 42101       Philadelph…  40.0  -75.1\n 8 Atlanta   Atlanta    GA       Georgia    13121       Fulton       33.8  -84.4\n 9 Washingt… Washington DC       District … 11001       District o…  38.9  -77.0\n10 Boston    Boston     MA       Massachus… 25025       Suffolk      42.3  -71.1\n# ℹ 31,244 more rows\n# ℹ 9 more variables: population &lt;dbl&gt;, density &lt;dbl&gt;, source &lt;chr&gt;,\n#   military &lt;lgl&gt;, incorporated &lt;lgl&gt;, timezone &lt;chr&gt;, ranking &lt;dbl&gt;,\n#   zips &lt;chr&gt;, id &lt;dbl&gt;\n\ncities_raw &lt;- read_csv(\"data/uscities.csv\")\n\nRows: 31254 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): city, city_ascii, state_id, state_name, county_fips, county_name, s...\ndbl (6): lat, lng, population, density, ranking, id\nlgl (2): military, incorporated\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(cities_raw)\n\nRows: 31,254\nColumns: 17\n$ city         &lt;chr&gt; \"New York\", \"Los Angeles\", \"Chicago\", \"Miami\", \"Houston\",…\n$ city_ascii   &lt;chr&gt; \"New York\", \"Los Angeles\", \"Chicago\", \"Miami\", \"Houston\",…\n$ state_id     &lt;chr&gt; \"NY\", \"CA\", \"IL\", \"FL\", \"TX\", \"TX\", \"PA\", \"GA\", \"DC\", \"MA…\n$ state_name   &lt;chr&gt; \"New York\", \"California\", \"Illinois\", \"Florida\", \"Texas\",…\n$ county_fips  &lt;chr&gt; \"36081\", \"06037\", \"17031\", \"12086\", \"48201\", \"48113\", \"42…\n$ county_name  &lt;chr&gt; \"Queens\", \"Los Angeles\", \"Cook\", \"Miami-Dade\", \"Harris\", …\n$ lat          &lt;dbl&gt; 40.6943, 34.1141, 41.8375, 25.7840, 29.7860, 32.7935, 40.…\n$ lng          &lt;dbl&gt; -73.9249, -118.4068, -87.6866, -80.2101, -95.3885, -96.76…\n$ population   &lt;dbl&gt; 18832416, 11885717, 8489066, 6113982, 6046392, 5843632, 5…\n$ density      &lt;dbl&gt; 10943.7, 3165.8, 4590.3, 4791.1, 1386.5, 1477.2, 4547.5, …\n$ source       &lt;chr&gt; \"shape\", \"shape\", \"shape\", \"shape\", \"shape\", \"shape\", \"sh…\n$ military     &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F…\n$ incorporated &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRU…\n$ timezone     &lt;chr&gt; \"America/New_York\", \"America/Los_Angeles\", \"America/Chica…\n$ ranking      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ zips         &lt;chr&gt; \"11229 11226 11225 11224 11223 11221 11220 11385 10169 10…\n$ id           &lt;dbl&gt; 1840034016, 1840020491, 1840000494, 1840015149, 184002092…\n\n\n\ncities_sf &lt;- st_as_sf(cities_raw, coords = c(\"lng\", \"lat\"), crs = 4326) \n\n\ncities_proj &lt;- st_transform(cities_sf, crs = eqdc)\n\ncities_conus &lt;- st_join(cities_proj, conus_states_eqdc, join = st_within, left = FALSE)"
  },
  {
    "objectID": "index.html#distance-to-usa-border-coastline-or-national-km",
    "href": "index.html#distance-to-usa-border-coastline-or-national-km",
    "title": "Lab 10",
    "section": "2.1 Distance to USA Border (coastline or national) (km)",
    "text": "2.1 Distance to USA Border (coastline or national) (km)\n\nlibrary(flextable)\n\nWarning: package 'flextable' was built under R version 4.4.3\n\n\n\nAttaching package: 'flextable'\n\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\nusa_outline &lt;- st_union(conus_states_eqdc)\n\nusa_border &lt;- st_cast(usa_outline, \"MULTILINESTRING\")\n\ncities_conus$dist_to_us_border_km &lt;- as.numeric(st_distance(cities_conus, usa_border)) / 1000\n\ntop5_cities &lt;- cities_conus %&gt;%\n  arrange(desc(dist_to_us_border_km)) %&gt;%\n  slice(1:5) %&gt;%\n  select(city, state_name.x, dist_to_us_border_km) %&gt;%\n  st_drop_geometry()\n\ntop5_cities_flex &lt;- flextable(top5_cities) %&gt;%\n  \n  set_header_labels(\n    city = \"City\",\n    state_name.x = \"State\",\n    dist_to_us_border_km = \"Distance to Border (km)\"\n  ) %&gt;%\n  add_header_row(values = \"Top 5 Farthest Cities from USA Border\", colwidths = 3)\n\ntop5_cities_flex\n\nTop 5 Farthest Cities from USA BorderCityStateDistance to Border (km)MinneapolisKansas1,084.275AdaKansas1,084.112BarnardKansas1,083.737ManchesterKansas1,080.210TalmageKansas1,080.049"
  },
  {
    "objectID": "index.html#distance-to-states-km",
    "href": "index.html#distance-to-states-km",
    "title": "Lab 10",
    "section": "2.2 Distance to States (km)",
    "text": "2.2 Distance to States (km)\n\nstates_lines &lt;- st_cast(conus_states_eqdc, \"MULTILINESTRING\")\n\ncities_dist_to_state_km &lt;- apply(st_distance(cities_proj, states_lines), 1, min) / 1000\n\ncities_proj$dist_to_state_km &lt;- cities_dist_to_state_km\n\ntop5_cities_state &lt;- cities_proj %&gt;%\n  arrange(desc(dist_to_state_km)) %&gt;%\n  select(city, state_name, dist_to_state_km) %&gt;%\n  head(5) %&gt;%\n  st_drop_geometry() \n\ntop5_cities_state_flex &lt;- flextable(top5_cities_state) %&gt;%\n  set_header_labels(\n    city = \"City\",\n    state_name = \"State\",\n    dist_to_state_km = \"Distance to State Border (km)\"\n  ) %&gt;%\n  add_header_row(values = \"Top 5 Farthest Cities from State Border\", colwidths = 3)\n\ntop5_cities_state_flex\n\nTop 5 Farthest Cities from State BorderCityStateDistance to State Border (km)Attu StationAlaska4,118.416Eareckson StationAlaska4,060.616KekahaHawaii3,762.144KaumakaniHawaii3,758.751Pakala VillageHawaii3,758.405"
  },
  {
    "objectID": "index.html#distance-to-mexico-km",
    "href": "index.html#distance-to-mexico-km",
    "title": "Lab 10",
    "section": "2.3 Distance to Mexico (km)",
    "text": "2.3 Distance to Mexico (km)\n\nmexico &lt;- countries_proj %&gt;%\n  filter(sovereignt == \"Mexico\")\n\nmexico_proj &lt;- st_transform(mexico, st_crs(cities_proj))\n\ncities_proj$dist_to_mexico_km &lt;- st_distance(cities_proj, mexico_proj) / 1000\n\ntop5_cities_mexico &lt;- cities_proj %&gt;%\n  select(-city_ascii, -state_id, -county_fips, -county_name, -population, \n         -density, -source, -military, -incorporated, -timezone, -ranking, \n         -zips, -id, -dist_to_state_km) %&gt;%\n  arrange(desc(dist_to_mexico_km)) %&gt;%\n  head(5) %&gt;%\n  st_drop_geometry()\n\ntop5_cities_mexico_flex &lt;- flextable(top5_cities_mexico) %&gt;%\n  set_header_labels(\n    city = \"City\",\n    state_name = \"State\",\n    dist_to_mexico_km = \"Distance to Mexico (km)\"\n  ) %&gt;%\n  add_header_row(values = \"Top 5 Farthest Cities from Mexico\", colwidths = 3)\n\n\ntop5_cities_mexico_flex\n\nTop 5 Farthest Cities from MexicoCityStateDistance to Mexico (km)Attu StationAlaska5,640.179 [m]Eareckson StationAlaska5,576.325 [m]Point HopeAlaska5,061.411 [m]GambellAlaska5,026.623 [m]Point LayAlaska5,016.127 [m]\n\n\nNote: I believe that the distance is in the correct units. I’m not sure why there is an [m] next to the distance values.  ## 2.4 Distance to Canada (km)\n\n# 1. Isolate Canada from the country objects\ncanada_proj &lt;- countries_proj %&gt;%\n  filter(sovereignt == \"Canada\")\n\n# 2. Calculate the distance from each city to the Canadian border (in kilometers)\ncities_proj$dist_to_canada_km &lt;- as.numeric(st_distance(cities_proj, canada_proj)) / 1000\n\n# 3. Create a table for the five cities farthest from the Canadian border\ntop5_cities_canada &lt;- cities_proj %&gt;%\n  select(-city_ascii, -state_id, -county_fips, -county_name, -population, \n         -density, -source, -military, -incorporated, -timezone, -ranking, \n         -zips, -id, -dist_to_state_km, -dist_to_mexico_km) %&gt;%\n  arrange(desc(dist_to_canada_km)) %&gt;%\n  head(5) %&gt;%\n  st_drop_geometry()  # Remove the geometry column for display in the table\n\n# 4. Create the flextable with only the desired columns\ntop5_cities_canada_flex &lt;- flextable(top5_cities_canada) %&gt;%\n  set_header_labels(\n    name = \"City\",\n    state_name = \"State\",\n    dist_to_canada_km = \"Distance to Canada (km)\"\n  )\n\n# Display the flextable\ntop5_cities_canada_flex\n\ncityStateDistance to Canada (km)Hawaiian Ocean ViewHawaii4,151.650Discovery HarbourHawaii4,149.978WaiohinuHawaii4,146.501NaalehuHawaii4,144.805PahalaHawaii4,127.362"
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Lab 10",
    "section": "3.1 Data",
    "text": "3.1 Data"
  },
  {
    "objectID": "index.html#city-distance-from-the-border",
    "href": "index.html#city-distance-from-the-border",
    "title": "Lab 10",
    "section": "3.2 City Distance from the Border",
    "text": "3.2 City Distance from the Border"
  },
  {
    "objectID": "index.html#city-distance-from-nearest-state",
    "href": "index.html#city-distance-from-nearest-state",
    "title": "Lab 10",
    "section": "3.3 City Distance from Nearest State",
    "text": "3.3 City Distance from Nearest State"
  },
  {
    "objectID": "index.html#equidistance-boundary-from-mexico-and-canada",
    "href": "index.html#equidistance-boundary-from-mexico-and-canada",
    "title": "Lab 10",
    "section": "3.4 Equidistance boundary from Mexico and Canada",
    "text": "3.4 Equidistance boundary from Mexico and Canada"
  },
  {
    "objectID": "index.html#quantifing-border-zone",
    "href": "index.html#quantifing-border-zone",
    "title": "Lab 10",
    "section": "4.1 Quantifing Border Zone",
    "text": "4.1 Quantifing Border Zone"
  },
  {
    "objectID": "index.html#mapping-border-zone",
    "href": "index.html#mapping-border-zone",
    "title": "Lab 10",
    "section": "4.2 Mapping Border Zone",
    "text": "4.2 Mapping Border Zone"
  },
  {
    "objectID": "index.html#instead-of-labeling-the-10-most-populous-cites-label-the-most-populous-city-in-each-state-within-the-danger-zone.",
    "href": "index.html#instead-of-labeling-the-10-most-populous-cites-label-the-most-populous-city-in-each-state-within-the-danger-zone.",
    "title": "Lab 10",
    "section": "4.3 Instead of labeling the 10 most populous cites, label the most populous city in each state within the Danger Zone.",
    "text": "4.3 Instead of labeling the 10 most populous cites, label the most populous city in each state within the Danger Zone."
  }
]